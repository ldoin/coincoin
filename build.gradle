
plugins {
    id 'java'
    id 'war'
    id 'idea'
    id 'jacoco'
    id "io.spring.dependency-management" version "0.3.1.RELEASE"
    id 'com.bmuschko.tomcat' version "2.0"
    id 'com.github.kt3k.coveralls' version "2.0.1x"
}

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.glassfish.jersey:jersey-bom:2.13'
    }
}

dependencies {
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson"
    compile "org.glassfish.jersey.containers:jersey-container-servlet"

    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'org.glassfish.hk2:guice-bridge:2.4.0-b07'
    compile 'com.google.inject.extensions:guice-servlet:4.0-beta5'

    compile 'org.quartz-scheduler:quartz:2.2.1'
    compile 'org.quartz-scheduler:quartz-jobs:2.2.1'

    compile 'org.jsoup:jsoup:1.7.2'

    compile 'com.github.jknack:handlebars:2.0.0'

    compile 'com.h2database:h2:1.4.183'

    compile 'org.apache.commons:commons-email:1.3.3'
    compile 'commons-configuration:commons-configuration:1.10'

    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'ch.qos.logback:logback-classic:1.1.2'

    def tomcatVersion = '8.0.15'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    testCompile 'org.testng:testng:6.8.8'

    testCompile 'org.assertj:assertj-core:1.7.0'

    testCompile 'org.mockito:mockito-all:1.10.8'

    testCompile 'org.mock-server:mockserver-netty:3.9.1'

    testCompile 'com.icegreen:greenmail:1.4.0'

    testCompile "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion"
    testCompile "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatVersion"
    testCompile "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion"
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
