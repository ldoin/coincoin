# Inspired by quartz.properties shipped with the library

# Scheduler Configuration
org.quartz.scheduler.instanceName: CoinCoinQuartzScheduler
org.quartz.scheduler.rmi.export: false
org.quartz.scheduler.rmi.proxy: false
org.quartz.scheduler.wrapJobExecutionInUserTransaction: false

# JMX
org.quartz.scheduler.jmx.export: true

# ThreadPool Configuration
org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount: 50
# See Thread.NORM_PRIORITY
org.quartz.threadPool.threadPriority: 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true


# JobStore Configuration
# The number of milliseconds the scheduler will allow a trigger to pass its next-fire-time by before being considered misfired
org.quartz.jobStore.misfireThreshold: 60000
org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.dataSource: coinCoinDataSource
org.quartz.dataSource.coinCoinDataSource.driver: org.h2.Driver
# See http://www.h2database.com/html/advanced.html#mvcc & tables_h2.sql
org.quartz.dataSource.coinCoinDataSource.URL: jdbc:h2:mem:CoinCoinJobStore;MVCC=TRUE;INIT=runscript from 'classpath:tables_h2.sql'
org.quartz.dataSource.coinCoinDataSource.user:
org.quartz.dataSource.coinCoinDataSource.password:
# It is recommended that your DataSource max connection size be configured to be at least the number of worker threads in the thread pool plus three.
# You may need additional connections if your application is also making frequent calls to the scheduler API.
org.quartz.dataSource.coinCoinDataSource.maxConnections: 53

